{"ast":null,"code":"var _jsxFileName = \"/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/ClientColorChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../Context/GlobalContext';\nimport { Link, useParams } from 'react-router-dom';\nimport { UserContext } from '../Context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACK_END_URL = process.env.REACT_APP_BACKEND_URL;\nexport default function ClientColorChart() {\n  _s();\n  const {\n    client_id\n  } = useParams();\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    currentClient,\n    setCurrentClient\n  } = useContext(GlobalContext);\n  const [colorchart, setColorChart] = useEffect({});\n  const [porosity, setPorosity] = useState('');\n  const [texture, setTexture] = useState('');\n  const [elasticity, setElasticity] = useState('');\n  const [scalpCondition, setScalpCondition] = useState('');\n  const [naturalLevel, setNaturalLevel] = useState('');\n  const [desiredLevel, setDesiredLevel] = useState('');\n  const [contribPigment, setContribPigment] = useState('');\n  const [grayFront, setGrayFront] = useState('');\n  const [graySides, setGraySides] = useState('');\n  const [grayBack, setGrayBack] = useState('');\n  const [skinDepth, setSkinDepth] = useState('');\n  const [skinTone, setSkinTone] = useState('');\n  const [eyeColor, setEyeColor] = useState('');\n  useEffect(() => {\n    getColorChart();\n  }, []);\n  const handleClick = (e, func) => {\n    func(e.target.value);\n    console.log(e.target.value);\n  };\n  const getColorChart = async () => {\n    const token = user.apitoken;\n    const res = await fetch(`${BACK_END_URL}/api/client/${client_id}/colorchart`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await res.json();\n    console.log(data);\n    const colorchart = data.colorchart;\n    setColorChart(data);\n    // setPorosity(colorchart.porosity == undefined ? '': colorchart.porosity)\n    // setTexture(colorchart.hair_texture)\n    // setElasticity(colorchart.elasticity)\n    // setScalpCondition(colorchart.scalp_condition)\n    // setNaturalLevel(colorchart.natural_level)\n    // setDesiredLevel(colorchart.desired_level)\n    // setContribPigment(colorchart.contrib_pigment)\n    // setGrayFront(colorchart.gray_front)\n    // setGraySides(colorchart.gray_sides)\n    // setGrayBack(colorchart.gray_back)\n    // setSkinDepth(colorchart.skin_depth)\n    // setSkinTone(colorchart.skin_tone)\n    // setEyeColor(colorchart.eye_color)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(ClientColorChart, \"TFYsOf+rTIAmymD88UDWWTs20Q8=\", false, function () {\n  return [useParams];\n});\n_c = ClientColorChart;\nvar _c;\n$RefreshReg$(_c, \"ClientColorChart\");","map":{"version":3,"names":["React","useContext","useEffect","useState","GlobalContext","Link","useParams","UserContext","jsxDEV","_jsxDEV","BACK_END_URL","process","env","REACT_APP_BACKEND_URL","ClientColorChart","_s","client_id","user","currentClient","setCurrentClient","colorchart","setColorChart","porosity","setPorosity","texture","setTexture","elasticity","setElasticity","scalpCondition","setScalpCondition","naturalLevel","setNaturalLevel","desiredLevel","setDesiredLevel","contribPigment","setContribPigment","grayFront","setGrayFront","graySides","setGraySides","grayBack","setGrayBack","skinDepth","setSkinDepth","skinTone","setSkinTone","eyeColor","setEyeColor","getColorChart","handleClick","e","func","target","value","console","log","token","apitoken","res","fetch","method","headers","Authorization","data","json","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/ClientColorChart.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { GlobalContext } from '../Context/GlobalContext'\nimport { Link, useParams } from 'react-router-dom'\nimport { UserContext } from '../Context/UserContext'\n\nconst BACK_END_URL = process.env.REACT_APP_BACKEND_URL\n\nexport default function ClientColorChart() {\n\n    const { client_id } = useParams()\n    const { user } = useContext(UserContext)\n    const { currentClient, setCurrentClient } = useContext(GlobalContext)\n\n    const [colorchart, setColorChart] = useEffect({})\n\n    const [porosity, setPorosity] = useState('')\n    const [texture, setTexture] = useState('')\n    const [elasticity, setElasticity] = useState('')\n    const [scalpCondition, setScalpCondition] = useState('')\n    const [naturalLevel, setNaturalLevel] = useState('')\n    const [desiredLevel, setDesiredLevel] = useState('')\n    const [contribPigment, setContribPigment] = useState('')\n    const [grayFront, setGrayFront] = useState('')\n    const [graySides, setGraySides] = useState('')\n    const [grayBack, setGrayBack] = useState('')\n    const [skinDepth, setSkinDepth] = useState('')\n    const [skinTone, setSkinTone] = useState('')\n    const [eyeColor, setEyeColor] = useState('')\n\n    useEffect(()=> {getColorChart()}, [])\n    \n\n    const handleClick = (e, func) => {\n        func(e.target.value)\n        console.log(e.target.value)\n    };\n\n    const getColorChart = async () => {\n        const token = user.apitoken\n\n        const res = await fetch(`${BACK_END_URL}/api/client/${client_id}/colorchart`, {\n            method: \"GET\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n        })\n        const data = await res.json()\n        console.log(data)\n        const colorchart = data.colorchart\n        setColorChart(data)\n        // setPorosity(colorchart.porosity == undefined ? '': colorchart.porosity)\n        // setTexture(colorchart.hair_texture)\n        // setElasticity(colorchart.elasticity)\n        // setScalpCondition(colorchart.scalp_condition)\n        // setNaturalLevel(colorchart.natural_level)\n        // setDesiredLevel(colorchart.desired_level)\n        // setContribPigment(colorchart.contrib_pigment)\n        // setGrayFront(colorchart.gray_front)\n        // setGraySides(colorchart.gray_sides)\n        // setGrayBack(colorchart.gray_back)\n        // setSkinDepth(colorchart.skin_depth)\n        // setSkinTone(colorchart.skin_tone)\n        // setEyeColor(colorchart.eye_color)\n    };\n\n    return (\n        <div className='flex flex-col items-center'>\n            {/* <h2 className=\"card-title mt-5 text-base-100 bg-primary h-10 pr-2 pl-2\">{`${currentClient.first_name} ${currentClient.last_name}`}</h2>\n            <div className='flex justify-center mt-5'>\n                <div className=\"tabs\">\n                    <Link to={`/client/${client_id}/formulas`} className=\"tab tab-lifted tab-lg \">Formulas</Link>\n                    <Link to={`/client/${client_id}`} className=\"tab tab-lifted tab-lg \">Info</Link>\n                    <a className=\"tab tab-lifted tab-lg tab-active\">Color Chart</a>\n                </div>\n            </div>\n\n            <div className=\"card  max-w-fit bg-base-100 shadow-xl p-10\">\n\n                <div className='flex flex-col items-center mb-4'>\n                    <p className='mb-2 underline'>Porosity </p>\n                    <div className='flex'>\n                        <button onClick={(e) => handleClick(e, setPorosity)} value=\"resistant\" className={`badge ${porosity === 'resistant' ? '' : 'badge-outline'}`}>Resistant</button>\n                        <button onClick={(e) => handleClick(e, setPorosity)} value=\"normal\" className={`badge ${porosity === 'normal' ? '' : 'badge-outline'}`}>Normal</button>\n                        <button onClick={(e) => handleClick(e, setPorosity)} value=\"porous\" className={`badge ${porosity === 'porous' ? '' : 'badge-outline'}`}>Porous</button>\n                        <button onClick={(e) => handleClick(e, setPorosity)} value=\"very porous\" className={`badge ${porosity === 'very porous' ? '' : 'badge-outline'}`}>Very Porous</button>\n                    </div>\n                </div>\n\n                <div className='flex flex-col items-center mb-4'>\n                    <p className='mb-2 underline'>Texture </p>\n                    <div className='flex'>\n                        <button onClick={(e) => handleClick(e, setTexture)} value=\"fine\" className={`badge ${texture === 'fine' ? '' : 'badge-outline'}`}>Fine</button>\n                        <button onClick={(e) => handleClick(e, setTexture)} value=\"medium\" className={`badge ${texture === 'medium' ? '' : 'badge-outline'}`}>Medium</button>\n                        <button onClick={(e) => handleClick(e, setTexture)} value=\"coarse\" className={`badge ${texture === 'coarse' ? '' : 'badge-outline'}`}>Coarse</button>\n                    </div>\n                </div>\n\n                <div className='flex flex-col items-center mb-4'>\n                    <p className='mb-2 underline'>Elasticity </p>\n                    <div className='flex'>\n                        <button onClick={(e) => handleClick(e, setElasticity)} value=\"normal\" className={`badge ${elasticity === 'normal' ? '' : 'badge-outline'}`}>normal</button>\n                        <button onClick={(e) => handleClick(e, setElasticity)} value=\"poor\" className={`badge ${elasticity === 'poor' ? '' : 'badge-outline'}`}>Poor</button>\n                        <button onClick={(e) => handleClick(e, setElasticity)} value=\"very poor\" className={`badge ${elasticity === 'very poor' ? '' : 'badge-outline'}`}>Very Poor</button>\n                    </div>\n                </div>\n\n                <div className='flex flex-col items-center mb-4'>\n                    <p className='mb-2 underline'>Scalp Condition </p>\n                    <div className='flex'>\n                        <button onClick={(e) => handleClick(e, setScalpCondition)} value=\"normal\" className={`badge ${scalpCondition === 'normal' ? '' : 'badge-outline'}`}>Normal</button>\n                        <button onClick={(e) => handleClick(e, setScalpCondition)} value=\"dry\" className={`badge ${scalpCondition === 'dry' ? '' : 'badge-outline'}`}>Dry</button>\n                        <button onClick={(e) => handleClick(e, setScalpCondition)} value=\"Oily\" className={`badge ${scalpCondition === 'Oily' ? '' : 'badge-outline'}`}>Oily</button>\n                    </div>\n                </div>\n\n                <div className='flex flex-col items-center'>\n                    <div>\n                        <label>Natural Level: </label>\n                        <input className='mb-2 badge w-32' value=\"7/17\" />\n                    </div>\n                    <p className='mb-2'>Desired Level: <div className=\"badge \">10</div></p>\n                </div>\n\n                <div className='flex flex-col flex-wrap items-center mb-4'>\n                    <p className='mb-2 underline'>Contributing Pigment </p>\n                    <div className='flex'>\n                        <button onClick={(e) => handleClick(e, setContribPigment)} value=\"yellow\" className={`badge badge-sm ${contribPigment === 'yellow' ? '' : 'badge-outline'}`}>Yellow</button>\n                        <button onClick={(e) => handleClick(e, setContribPigment)} value=\"yellow/orange\" className={`badge badge-sm ${contribPigment === 'yellow/orange' ? '' : 'badge-outline'}`}>Yellow/Orange</button>\n                        <button onClick={(e) => handleClick(e, setContribPigment)} value=\"orange\" className={`badge badge-sm ${contribPigment === 'orange' ? '' : 'badge-outline'}`}>Orange</button>\n                        <button onClick={(e) => handleClick(e, setContribPigment)} value=\"orange/red\" className={`badge badge-sm ${contribPigment === 'orange/red' ? '' : 'badge-outline'}`}>Orange/Red</button>\n                        <button onClick={(e) => handleClick(e, setContribPigment)} value=\"red\" className={`badge badge-sm ${contribPigment === 'red' ? '' : 'badge-outline'}`}>Red</button>\n                    </div>\n                </div>\n\n                <div className='flex flex-col items-center mb-3'>\n                    <p>Gray Percentage: </p>\n                    <div className='flex'>\n                        <p>Front <div className=\"badge \">25%</div></p>\n                        <p className='pr-2 pl-2'>Sides <div className=\"badge \">25%</div></p>\n                        <p>Back <div className=\"badge \">25%</div></p>\n                    </div>\n                </div>\n\n                <div className='flex flex-col items-center mb-4'>\n                    <p className='mb-2 underline'>Skin Depth </p>\n                    <div className='flex'>\n                        <button onClick={(e) => handleClick(e, setSkinDepth)} value=\"light\" className={`badge ${skinDepth === 'light' ? '' : 'badge-outline'}`}>Light</button>\n                        <button onClick={(e) => handleClick(e, setSkinDepth)} value=\"medium\" className={`badge ${skinDepth === 'medium' ? '' : 'badge-outline'}`}>Medium</button>\n                        <button onClick={(e) => handleClick(e, setSkinDepth)} value=\"dark\" className={`badge ${skinDepth === 'dark' ? '' : 'badge-outline'}`}>Dark</button>\n                    </div>\n                </div>\n\n                <div className='flex flex-col items-center mb-4'>\n                    <p className='mb-2 underline'>Skin Tone </p>\n                    <div className='flex'>\n                        <button onClick={(e) => handleClick(e, setSkinTone)} value=\"warm\" className={`badge ${skinTone === 'warm' ? '' : 'badge-outline'}`}>Warm</button>\n                        <button onClick={(e) => handleClick(e, setSkinTone)} value=\"cool\" className={`badge ${skinTone === 'cool' ? '' : 'badge-outline'}`}>Cool</button>\n                        <button onClick={(e) => handleClick(e, setSkinTone)} value=\"neutral\" className={`badge ${skinTone === 'neutral' ? '' : 'badge-outline'}`}>Neutral</button>\n                    </div>\n                </div>\n\n                <div className='flex flex-col items-center mb-4'>\n                    <p className='mb-2 underline'>Eye Color</p>\n                    <div className='flex'>\n                        <button className=\"badge badge-outline\">Resistant</button>\n                        <div className=\"badge \">Normal</div>\n                        <div className=\"badge badge-outline\">Porous</div>\n                        <div className=\"badge badge-outline whitespace-nowrap\">Very Porous</div>\n                    </div>\n                </div>\n\n                <button className='btn w-36'>Save</button>\n\n\n            </div> */}\n\n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,SAASC,WAAW,QAAQ,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;AAEtD,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAEvC,MAAM;IAAEC;EAAU,CAAC,GAAGV,SAAS,CAAC,CAAC;EACjC,MAAM;IAAEW;EAAK,CAAC,GAAGhB,UAAU,CAACM,WAAW,CAAC;EACxC,MAAM;IAAEW,aAAa;IAAEC;EAAiB,CAAC,GAAGlB,UAAU,CAACG,aAAa,CAAC;EAErE,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,SAAS,CAAC,CAAC,CAAC,CAAC;EAEjD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC2B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC+B,cAAc,EAAEC,iBAAiB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmC,SAAS,EAAEC,YAAY,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqC,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuC,SAAS,EAAEC,YAAY,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACyC,QAAQ,EAAEC,WAAW,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2C,QAAQ,EAAEC,WAAW,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAK;IAAC8C,aAAa,CAAC,CAAC;EAAA,CAAC,EAAE,EAAE,CAAC;EAGrC,MAAMC,WAAW,GAAGA,CAACC,CAAC,EAAEC,IAAI,KAAK;IAC7BA,IAAI,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;IACpBC,OAAO,CAACC,GAAG,CAACL,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAML,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMQ,KAAK,GAAGvC,IAAI,CAACwC,QAAQ;IAE3B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEjD,YAAa,eAAcM,SAAU,aAAY,EAAE;MAC1E4C,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,aAAa,EAAG,UAASN,KAAM;MACnC;IACJ,CAAC,CAAC;IACF,MAAMO,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;IAC7BV,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;IACjB,MAAM3C,UAAU,GAAG2C,IAAI,CAAC3C,UAAU;IAClCC,aAAa,CAAC0C,IAAI,CAAC;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;;EAED,oBACItD,OAAA;IAAKwD,SAAS,EAAC;EAA4B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA8GtC,CAAC;AAEd;AAACtD,EAAA,CA3KuBD,gBAAgB;EAAA,QAEdR,SAAS;AAAA;AAAAgE,EAAA,GAFXxD,gBAAgB;AAAA,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}