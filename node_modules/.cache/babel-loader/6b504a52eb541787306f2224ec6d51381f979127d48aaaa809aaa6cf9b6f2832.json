{"ast":null,"code":"var _jsxFileName = \"/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Context/GlobalContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalContext = /*#__PURE__*/createContext();\nconst GlobalContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const getCurrentClientFromLS = () => {\n    const found = localStorage.getItem('myGuest_currentClient');\n    if (found) {\n      return JSON.parse(found);\n    }\n    return {};\n  };\n  const [clients, setClients] = useState([]);\n  const [currentClient, setCurrentClient] = useState(getCurrentClientFromLS);\n  const myvalues = {\n    clients,\n    setClients,\n    currentClient,\n    setCurrentClient\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: myvalues,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalContextProvider, \"L5I9xu6dxxD/WLctd1xitnwvwD8=\");\n_c = GlobalContextProvider;\nexport default GlobalContextProvider;\nvar _c;\n$RefreshReg$(_c, \"GlobalContextProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","GlobalContext","GlobalContextProvider","_ref","_s","children","getCurrentClientFromLS","found","localStorage","getItem","JSON","parse","clients","setClients","currentClient","setCurrentClient","myvalues","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Context/GlobalContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nexport const GlobalContext = createContext();\n\nconst GlobalContextProvider = ({ children }) => {\n\n    \n    const getCurrentClientFromLS = () => {\n        const found = localStorage.getItem('myGuest_currentClient');\n        if (found){\n            return JSON.parse(found)\n        }\n        return {}\n    }\n    \n    const [clients, setClients] = useState([])\n    const [currentClient, setCurrentClient] = useState(getCurrentClientFromLS)\n    const myvalues = {\n        clients,\n        setClients,\n        currentClient,\n        setCurrentClient\n    }\n\n  return (\n    <GlobalContext.Provider value={myvalues}>\n        {children}\n    </GlobalContext.Provider>\n  )\n}\nexport default GlobalContextProvider"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,aAAa,gBAAGJ,aAAa,CAAC,CAAC;AAE5C,MAAMK,qBAAqB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAGvC,MAAMG,sBAAsB,GAAGA,CAAA,KAAM;IACjC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,uBAAuB,CAAC;IAC3D,IAAIF,KAAK,EAAC;MACN,OAAOG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC;IAC5B;IACA,OAAO,CAAC,CAAC;EACb,CAAC;EAED,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAACQ,sBAAsB,CAAC;EAC1E,MAAMU,QAAQ,GAAG;IACbJ,OAAO;IACPC,UAAU;IACVC,aAAa;IACbC;EACJ,CAAC;EAEH,oBACEf,OAAA,CAACC,aAAa,CAACgB,QAAQ;IAACC,KAAK,EAAEF,QAAS;IAAAX,QAAA,EACnCA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE7B,CAAC;AAAAlB,EAAA,CAzBKF,qBAAqB;AAAAqB,EAAA,GAArBrB,qBAAqB;AA0B3B,eAAeA,qBAAqB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}