[{"/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/index.js":"1","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/App.js":"2","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Components/Navbar.jsx":"3","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/Home.jsx":"4","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/LogIn.jsx":"5","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/SignUp.jsx":"6","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Context/UserContext.js":"7","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/Clients.jsx":"8","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/UserProfile.jsx":"9","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/Settings.jsx":"10","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/SingleClient.jsx":"11"},{"size":465,"mtime":1684098407268,"results":"12","hashOfConfig":"13"},{"size":1858,"mtime":1684444732775,"results":"14","hashOfConfig":"13"},{"size":5306,"mtime":1684729454591,"results":"15","hashOfConfig":"13"},{"size":1907,"mtime":1684678360519,"results":"16","hashOfConfig":"13"},{"size":4408,"mtime":1684729132433,"results":"17","hashOfConfig":"13"},{"size":6021,"mtime":1684713635116,"results":"18","hashOfConfig":"13"},{"size":846,"mtime":1684247153559,"results":"19","hashOfConfig":"13"},{"size":3970,"mtime":1684378841588,"results":"20","hashOfConfig":"13"},{"size":744,"mtime":1684359715871,"results":"21","hashOfConfig":"13"},{"size":105,"mtime":1684268836639,"results":"22","hashOfConfig":"13"},{"size":113,"mtime":1684293509563,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1m7tizx",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"27"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"27"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/index.js",[],[],[],"/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/App.js",["65"],[],"import React from 'react'\nimport Navbar from './Components/Navbar';\nimport { Routes, Route } from 'react-router-dom';\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage } from \"firebase/storage\";\nimport Home from './Views/Home';\nimport LogIn from './Views/LogIn';\nimport SignUp from './Views/SignUp';\nimport Clients from './Views/Clients';\nimport UserProfile from './Views/UserProfile';\nimport Settings from './Views/Settings';\nimport SingleClient from './Views/SingleClient';\n// import { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\nconst FIREBASE_KEY = process.env.REACT_APP_API_KEY\n\nconst firebaseConfig = {\n  apiKey: FIREBASE_KEY,\n  authDomain: \"client-keeper-a2e91.firebaseapp.com\",\n  projectId: \"client-keeper-a2e91\",\n  storageBucket: \"client-keeper-a2e91.appspot.com\",\n  messagingSenderId: \"579985018341\",\n  appId: \"1:579985018341:web:e7f40aec7416651e20330c\",\n  measurementId: \"G-V0C2V1ZHLD\",\n  databaseURL: 'https://client-keeper-a2e91-default-rtdb.firebaseio.com/',\n  storageBucket: 'gs://client-keeper-a2e91.appspot.com'\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\ngetStorage(initializeApp(firebaseConfig))\n// const analytics = getAnalytics(app);\n\nexport default function App() {\n  return (\n      <div>\n        <Navbar />\n        <Routes>\n          <Route path='/' element={<Home />}/>\n          <Route path='/login' element={<LogIn />}/>\n          <Route path='/signup' element={<SignUp />}/>\n          <Route path='/clients' element={<Clients />}/>\n          <Route path='/userprofile' element={<UserProfile />}/>\n          <Route path='/settings' element={<Settings />}/>\n          <Route path='/client/CLIENT_ID' element={<SingleClient />}/>\n\n        </Routes>\n        \n\n      </div>\n  )\n}\n","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Components/Navbar.jsx",["66"],[],"import React, { useEffect } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { UserContext } from '../Context/UserContext'\nimport { useContext } from 'react'\nimport stuntbot from '../images/stuntbot.png'\nimport { themeChange } from 'theme-change'\n\n\nexport default function Navbar() {\n\n    const navigate = useNavigate()\n\n    const { user, logMeOut } = useContext(UserContext)\n\n    useEffect(() => {\n        themeChange(false)\n        // ðŸ‘† false parameter is required for react project\n    }, [])\n\n\n    return (\n        <div>\n            <div className=\"navbar flex bg-neutral \">\n                <div className=\"navbar-start \">\n                    <div className=\"dropdown\">\n                        <label tabIndex={0} className=\"btn btn-accent lg:hidden\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h8m-8 6h16\" /></svg>\n                        </label>\n                        <ul tabIndex={0} className=\"menu menu-compact dropdown-content mt-3 p-2 shadow bg-base-100 rounded-box w-52\">\n                            <li><Link className='text-accent' to={'/'}>Home</Link></li>\n                            <li><Link className='text-accent' to={'/signup'}>Sign Up</Link></li>\n                            <li><Link className='text-accent' to={'/clients'}>Clients</Link></li>\n                            <li>\n                            <label className='text-accent' for=\"theme\">Theme\n                                <select data-choose-theme data-key=\"myGuest_theme\" className='hover' id=\"theme\">\n                                    <option value=\"mytheme\">Default</option>\n                                    <option value=\"cyberpunk\">Cyberpunk</option>\n                                    <option value=\"light\">Light</option>\n                                    <option value=\"dark\">Dark</option>\n                                    <option value=\"halloween\">Halloween</option>\n                                    <option value=\"lemonade\">Lemonade</option>\n                                    <option value=\"acid\">Acid</option>\n                                    <option value=\"synthwave\">Synthwave</option>\n                                </select>\n                            </label>\n                            </li>\n                        </ul>\n                    </div>\n                    <Link className='flex btn btn-ghost' to={user.uid ? '/clients' : '/'}>\n                        <span className=\"pr-0 text-base-100 normal-case text-xl\">my</span>\n                        <span className=\"pl-0 text-accent normal-case text-xl\">Guest</span>\n                    </Link>\n                </div>\n\n                <div className=\"navbar hidden lg:flex\">\n                    <ul className=\"menu menu-horizontal px-1\">\n                        <li><Link className='text-accent' to={'/'}>Homee</Link></li>\n                        <li><Link className='text-accent' to={'/SignUp'}>Sign Up</Link></li>\n                        <li><Link className='text-accent' to={'/clients'}>Clients</Link></li>\n                        {user.id ? <li><p className='text-secondary'>Hello, {user.first_name}!</p></li> : ''}\n                        <li>\n                            \n                            <label className='text-accent' data-key=\"myGuest_theme\" for=\"theme\">Theme\n                                <select data-choose-theme className='' id=\"theme\">\n                                    <option value=\"mytheme\">Default</option>\n                                    <option value=\"cyberpunk\">Cyberpunk</option>\n                                    <option value=\"lofi\">LoFi</option>\n                                    <option value=\"halloween\">Halloween</option>\n                                    <option value=\"synthwave\">Synthwave</option>\n                                    <option value=\"black\">Black</option>\n                                </select>\n                            </label>\n                        </li>\n                    </ul>\n                </div>\n                {user.id ?\n\n                    <div className='dropdown dropdown-end'>\n                        <label tabIndex={0} className=\"btn btn-ghost btn-circle avatar\">\n                            <div className=\"w-10 rounded-full ring ring-primary ring-offset-base-100 ring-offset-2\">\n                                <img src={user.photoURL ? user.photoURL : stuntbot} alt='' />\n                            </div>\n                        </label>\n                        <ul tabIndex={0} className=\"menu menu-compact dropdown-content mt-3 p-2 shadow bg-base-100 rounded-box w-52\">\n                            <li><Link to={'/userprofile'}>Profile</Link></li>\n                            <li><Link to={'/settings'}>Settings</Link></li>\n                            <li><Link onClick={() => logMeOut()}>Logout</Link></li>\n                        </ul>\n                    </div>\n\n                    :\n\n                    <div className=\"navbar-end\">\n                        <Link className=\"btn btn-accent\" to=\"/login\">Log In</Link>\n                    </div>\n                }\n            </div>\n\n        </div>\n    )\n}\n","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/Home.jsx",["67"],[],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport avant_image1 from '../images/avant_image1.png'\nimport haircut_background from '../images/haircut_background.png'\nimport platinum_bob from '../images/platinum_bob.png'\nimport modern_french_bob from '../images/modern_french_bob.png'\n\nexport default function Home() {\n\n    //This points directly to the current theme\n    //console.log(document.children[0].dataset.theme, \"this\")\n    \n    const randBackground = () => {\n        let x = [\n            avant_image1,\n            platinum_bob,\n            modern_french_bob\n        ];\n        let choice = Math.floor(Math.random() * (x.length));\n        return x[choice]\n    };\n\n    return (\n        <div>\n\n            <div className=\"hero min-h-screen\" style={{ backgroundImage: `url(${randBackground()})` }}>\n\n                <div className=\"hero-content text-center text-neutral-content\">\n                    <div className=\"max-w-md hero-overlay bg-opacity-30 p-12 rounded-xl\">\n                        <h1 className=\"mb-5 text-5xl font-bold\">Welcome to myGuest</h1>\n                        <p className=\"mb-5\">A convenient place for you to create and maintain a <b>personal database of your clientelle</b>. Allowing you to keep records of <b>color history</b> and <b>formulas</b>, as well as upload <b>photos of your work</b> and even contacting your clients through <b>email or text</b>. Made for hairstylists, by hairstylists!</p>\n                        <div className='flex justify-center w-full'>\n                            <Link className=\"btn btn-accent\" to=\"/signup\">Get Started</Link>\n                            <div className=\"divider divider-horizontal\">OR</div>\n                            <Link className=\"btn btn-accent\" to=\"/login\">Log In</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/LogIn.jsx",["68","69","70","71"],[],"import React, { useContext } from 'react'\nimport orange_cyberpunk from '../images/orange_cyberpunk.png'\nimport haircut_background from '../images/haircut_background.png'\nimport blue_hair from '../images/blue_hair.png'\nimport group from '../images/group.png'\nimport dual_tone from '../images/dual_tone.png'\nimport { UserContext } from '../Context/UserContext'\nimport { useNavigate } from 'react-router-dom'\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n\nconst BACK_END_URL = process.env.REACT_APP_BACKEND_URL\n\nexport default function LogIn() {\n\n  const { setUser } = useContext(UserContext)\n\n  const navigate = useNavigate()\n\n  const logIn = async (e) => {\n    e.preventDefault()\n    const email = e.target.email.value\n    const password = e.target.password.value\n\n    const url = BACK_END_URL + '/api/login';\n    const options = {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${btoa(email + \":\" + password)}`\n        // \"Content-Type\": 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      })\n    }\n\n    try {\n      const res = await fetch(url, options);\n      const data = await res.json();\n      if (data.status === 'ok') {\n        // Show success msg\n        console.log(data)\n        setUser(data.data)\n        localStorage.setItem('myGuest_user', JSON.stringify(data.data))\n        navigate('/clients')\n\n      } else {\n        return console.log(data.message)\n      }\n    }\n    catch {\n      console.log(\"something went wrong logging in.\")\n    }\n  };\n\n  // Takes info from google popup and requests the user's information from flask to set user state\n  const GooglelogIn = async (token) => {\n\n    const url = BACK_END_URL + '/api/google/login';\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n      })\n    }\n\n    try {\n      const res = await fetch(url, options);\n      const data = await res.json();\n      if (data.status === 'ok') {\n        // Show success \"You have successfully logged in\" msg data.message\n        console.log(data)\n        setUser(data.data)\n        localStorage.setItem('myGuest_user', JSON.stringify(data.data))\n        navigate('/clients')\n\n      } else {\n        // Display message \"Please create an account first!\"\n        navigate('/signup')\n        return console.log(data.message)\n      }\n    }\n    catch {\n      console.log(\"something went wrong logging in.\")\n    }\n  };\n\n  //Creates popup for getting Google account info\n  const createPopup = async () => {\n    const provider = new GoogleAuthProvider();\n    const auth = getAuth();\n    try {\n        const result = await signInWithPopup(auth, provider);\n        const googUser = result.user\n        if (googUser) {\n            console.log(googUser, \"Google user retreived\")\n            await GooglelogIn(googUser.accessToken)\n        }\n    }\n    catch {\n        console.log(\"PopUp Error: Invalid Google login.\")\n    }\n};\n\n\n  return (\n    <>\n      <div className='hero min-h-screen' style={{ backgroundImage: `url(${dual_tone})` }}>\n        <div className=\"card w-72 \">\n          <span className=' flex justify-center'>\n            <p className='bg-neutral-focus text-5xl pb-10 text-base-100 pb-2'>Log In</p>\n          </span>\n          <form onSubmit={(e) => { logIn(e) }}>\n\n            <div className=\"form-control\">\n              <label className=\"label\">\n                <span className=\"label-text text-base-100\">Email</span>\n              </label>\n              <input type=\"text\" required=\"required\" placeholder=\"Email\" name='email' className=\"input input-bordered\" />\n            </div>\n            <div className=\"form-control\">\n              <label className=\"label\">\n                <span className=\"label-text text-base-100\">Password</span>\n              </label>\n              <input type=\"password\" required=\"required\" placeholder=\"Password\" name='password' className=\"input input-bordered\" />\n            </div>\n            <div className=\"form-control mt-6\">\n              <button className=\"btn btn-accent\">Log In</button>\n            </div>\n          </form>\n          <div className=\"divider text-base-100\">OR</div>\n          <button className=\"btn btn-accent\" onClick={createPopup}>Log In with Google</button>\n        </div>\n      </div>\n    </>\n  )\n}\n","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/SignUp.jsx",["72"],[],"import React, { useContext } from 'react'\nimport { UserContext } from '../Context/UserContext'\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { useNavigate } from 'react-router-dom';\nimport brown_shape_round from '../images/brown_shape_round.png'\n\nconst BACK_END_URL = process.env.REACT_APP_BACKEND_URL\n\nexport default function SignUp() {\n\n    const { setUser } = useContext(UserContext)\n    const navigate = useNavigate()\n\n    const creatUserFromGoogle = async (user) => {\n        const url = BACK_END_URL + '/api/googlesignup';\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            },\n            body: JSON.stringify({\n                photoURL: user.photoURL,\n                // username: '',\n                password: '',\n                uid: user.uid,\n                displayName: user.displayName,\n                email: user.email\n            })\n        }\n\n        // if (password !== confirmPassword){\n        //     // Throw error msg here.\n        //     return \n        // }\n\n        const res = await fetch(url, options);\n        const data = await res.json();\n        if (data.status === 'ok') {\n            // Show success msg \"Account successfully created!\" data.message\n            console.log(data)\n        }\n\n    };\n\n\n    const createNewUser = async (e) => {\n        e.preventDefault()\n\n        const first_name = e.target.first_name.value\n        const last_name = e.target.last_name.value\n        const email = e.target.email.value\n        const password = e.target.password.value\n\n        const url = BACK_END_URL + '/api/signup';\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            },\n            body: JSON.stringify({\n                photoURL: '',\n                // username: username,\n                password: password,\n                uid: '',\n                first_name: first_name,\n                last_name: last_name,\n                email: email\n            })\n        }\n\n        // if (password !== confirmPassword){\n        //     // Throw error msg here.\n        //     return \n        // }\n        try{\n        const res = await fetch(url, options);\n        const data = await res.json();\n        if (data.status === 'ok') {\n            // Show success msg\n            console.log(data)\n            navigate('/login')\n        }else {\n            return console.log(data.message)\n        }\n    }\n    catch{\n        console.log(\"something went wrong with createNewUser\")\n    }\n\n    };\n\n\n    const createPopup = async () => {\n        const provider = new GoogleAuthProvider();\n        const auth = getAuth();\n        try {\n            const result = await signInWithPopup(auth, provider);\n            const user = result.user\n            if (user) {\n                console.log(user)\n                await creatUserFromGoogle(user)\n                navigate('/login')\n            }\n        }\n        catch {\n            navigate('/signup')\n        }\n    };\n\n    return (\n\n\n        <div className=\"hero min-h-screen \" style={{ backgroundImage: `url(${brown_shape_round})` }}>\n            <div className=\"hero-content flex-col lg:flex-row-reverse\">\n                <div className=\"text-center lg:text-left\">\n                    <h1 className=\"text-5xl font-bold text-base-100\">Create an account with us</h1>\n                    <p className=\"py-6 text-base-100\">or sign up with Google!</p>\n                </div>\n                <div className=\"card flex-shrink-0 w-full max-w-sm shadow-2xl hero-overlay bg-base-100 bg-opacity-20\">\n                    <div className=\"card-body\">\n                        <form onSubmit={(e) => createNewUser(e)}>\n                            <div className=\"form-control\">\n                                <label className=\"label\">\n                                    <span className=\"label-text text-base-100\">First Name</span>\n                                </label>\n                                <input type=\"text\" required=\"required\" placeholder=\"First Name\" name='first_name' className=\"input input-bordered\" />\n                            </div>\n                            <div className=\"form-control\">\n                                <label className=\"label\">\n                                    <span className=\"label-text text-base-100\">Last Name</span>\n                                </label>\n                                <input type=\"text\" required=\"required\" placeholder=\"Last Name\" name='last_name' className=\"input input-bordered\" />\n                            </div>\n                            <div className=\"form-control\">\n                                <label className=\"label\">\n                                    <span className=\"label-text text-base-100\">Email</span>\n                                </label>\n                                <input type=\"text\" required=\"required\" placeholder=\"Email\" name='email' className=\"input input-bordered\" />\n                            </div>\n                            <div className=\"form-control\">\n                                <label className=\"label\">\n                                    <span className=\"label-text text-base-100\">Password</span>\n                                </label>\n                                <input type=\"password\" required=\"required\" placeholder=\"Password\" name='password' className=\"input input-bordered\" />\n                            </div>\n                            <div className=\"form-control mt-6\">\n                                <button className=\"btn btn-accent\">Sign Up</button>\n                            </div>\n                        </form>\n                        <div className=\"divider text-base-100\">OR</div>\n                        <button className=\"btn btn-accent\" onClick={createPopup}>Sign Up with Google</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n    )\n}\n","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Context/UserContext.js",[],[],"/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/Clients.jsx",["73","74","75","76","77","78"],[],"import React, { useContext, useState } from 'react'\nimport { UserContext } from '../Context/UserContext';\nimport { getDatabase, ref, set, child, get } from \"firebase/database\";\n\nexport default function Clients() {\n\n    const [clients, setClients] = useState({})\n    const { user, setUser } = useContext(UserContext)\n\n    const addClient = () => {\n        const db = getDatabase()\n        set(ref(db, `/${user.uid}/clientid/formulaid/`), {\n            photos: 'https://cdn.discordapp.com/attachments/1004495634113511607/1107117378950668368/traviistea_stunning_hair_models_avant_garde_haircuts_mugler_pho_ea15d949-3a5b-4583-b0d9-9b475cc0a848.png',\n        });\n    }\n\n    return (\n        <div>\n\n            <div className=\"overflow-x-auto w-full\">\n                <table className={`table table-compact  table-zebra w-full`}>\n                    {/* head */}\n                    <thead>\n                        <tr>\n                            <th>Client</th>\n                            {window.innerWidth > 400 ? <th>Job</th> : ''}\n                            <th >\n                                <form className=\"form-control \">\n                                    <div className=\"input-group\">\n                                        <input type=\"text\" placeholder=\"Searchâ€¦\" className=\"input input-bordered input-sm w-36\" />\n                                        <button className=\"btn btn-square btn-sm\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" /></svg>\n                                        </button>\n                                    </div>\n                                </form>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {/* row 1 */}\n                        <tr>\n                            \n                            <td>\n                                <div className=\"flex items-center space-x-3\">\n                                    <div className=\"avatar\">\n                                        <div className=\"mask mask-squircle w-12 h-12\">\n                                            <img src=\"https://lh3.googleusercontent.com/a/AGNmyxYp3h0HYsVH3SKsMqCdDF46zkL2VmKov9GfX-Auuw=s96-c\" alt=\"User Profile Image\" />\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div className=\"font-bold\">Hart Hagerty</div>\n                                        <div className=\"text-sm opacity-50\">United States</div>\n                                    </div>\n                                </div>\n                            </td>\n                            {window.innerWidth > 400 ?\n                             <td>\n                                Zemlak, Daniel and Leannon\n                                <br />\n                                <span className=\"badge badge-accent badge-sm\">Desktop Support Technician</span>\n                            </td>\n                            :\n                            ''\n                            }\n\n                            <th>\n                                <button onClick={addClient} className=\"btn btn-xs btn-secondary\">details</button>\n                            </th>\n                        </tr>\n                        \n                    </tbody>\n                    {/* foot */}\n                    <tfoot>\n                        <tr>\n                            <th>Client</th>\n                            {window.innerWidth > 400 ? <th>Job</th> : ''}\n                            <th></th>\n                        </tr>\n                    </tfoot>\n\n                </table>\n            </div>\n\n        </div>\n    )\n}\n","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/UserProfile.jsx",["79"],[],"import React, { useContext } from 'react'\nimport { UserContext } from '../Context/UserContext'\nimport stuntbot from '../images/stuntbot.png'\n\nexport default function UserProfile() {\n    const { user } = useContext(UserContext)\n\n    return (\n        <div className='flex justify-center pt-10'>\n            <div className='card bg-neutral max-w-full p-10'>\n                <div className=\"avatar\">\n                    <div className=\"w-24 rounded-full ring ring-primary ring-offset-base-100 ring-offset-2\">\n                        <img src={user.photoURL ? user.photoURL : stuntbot} />\n                    </div>\n                </div>\n                <p className='text-secondary '>This is a card</p>\n\n            </div>\n\n        </div>\n    )\n}\n","/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/Settings.jsx",[],[],"/Users/travispeck/Documents/coding_temple/classwork/client_keep_capstone/client_keep_react/src/Views/SingleClient.jsx",[],[],{"ruleId":"80","severity":1,"message":"81","line":28,"column":3,"nodeType":"82","messageId":"83","endLine":28,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":11,"column":11,"nodeType":"86","messageId":"87","endLine":11,"endColumn":19},{"ruleId":"84","severity":1,"message":"88","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":26},{"ruleId":"84","severity":1,"message":"89","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":24},{"ruleId":"84","severity":1,"message":"88","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":26},{"ruleId":"84","severity":1,"message":"90","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":17},{"ruleId":"84","severity":1,"message":"91","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":13},{"ruleId":"84","severity":1,"message":"92","line":11,"column":13,"nodeType":"86","messageId":"87","endLine":11,"endColumn":20},{"ruleId":"84","severity":1,"message":"93","line":3,"column":33,"nodeType":"86","messageId":"87","endLine":3,"endColumn":38},{"ruleId":"84","severity":1,"message":"94","line":3,"column":40,"nodeType":"86","messageId":"87","endLine":3,"endColumn":43},{"ruleId":"84","severity":1,"message":"95","line":7,"column":12,"nodeType":"86","messageId":"87","endLine":7,"endColumn":19},{"ruleId":"84","severity":1,"message":"96","line":7,"column":21,"nodeType":"86","messageId":"87","endLine":7,"endColumn":31},{"ruleId":"84","severity":1,"message":"92","line":8,"column":19,"nodeType":"86","messageId":"87","endLine":8,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":47,"column":45,"nodeType":"99","endLine":47,"endColumn":172},{"ruleId":"100","severity":1,"message":"101","line":13,"column":25,"nodeType":"99","endLine":13,"endColumn":79},"no-dupe-keys","Duplicate key 'storageBucket'.","ObjectExpression","unexpected","no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","'haircut_background' is defined but never used.","'orange_cyberpunk' is defined but never used.","'blue_hair' is defined but never used.","'group' is defined but never used.","'setUser' is assigned a value but never used.","'child' is defined but never used.","'get' is defined but never used.","'clients' is assigned a value but never used.","'setClients' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]